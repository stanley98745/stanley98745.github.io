<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>python on Stanley&#39;s Blog</title>
    <link>https://stanley98745.github.io/categories/python/</link>
    <description>Recent content in python on Stanley&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>there801021@gmail.com (Stanley, JunFu Zhang)</managingEditor>
    <webMaster>there801021@gmail.com (Stanley, JunFu Zhang)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 08 May 2020 15:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://stanley98745.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>LeetCode - 383. Ransom Note</title>
        <link>https://stanley98745.github.io/posts/383.ransomnote/</link>
        <pubDate>Fri, 08 May 2020 15:00:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Fri, 08 May 2020 15:00:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/383.ransomnote/</guid>
        <description>題目敘述 題目連結 難度: Easy Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false. Each letter in the magazine string can only be used once in your ransom note. Example 1: Input: ransomNote =</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 283. Move Zeroes</title>
        <link>https://stanley98745.github.io/posts/283.movezeroes/</link>
        <pubDate>Thu, 07 May 2020 15:00:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Thu, 07 May 2020 15:00:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/283.movezeroes/</guid>
        <description>題目敘述 題目連結 難度: Easy Given an array nums, write a function to move all 0&#39;s to the end of it while maintaining the relative order of the non-zero elements. Example : Input: [0,1,0,3,12] Output: [1,3,12,0,0] Note: You must do this in-place without making a copy of the array. Minimize the total number of operations. 解答 1 2 3 4 5 6</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 15. 3Sum</title>
        <link>https://stanley98745.github.io/posts/15.3sum/</link>
        <pubDate>Fri, 01 May 2020 20:20:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Fri, 01 May 2020 20:20:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/15.3sum/</guid>
        <description>題目連結 難度: Medium 題目敘述 Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero. Note: The solution set must not contain duplicate triplets. Example: Given array nums = [-1, 0, 1, 2, -1, -4], A</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 3. Longest Substring Without Repeating Characters</title>
        <link>https://stanley98745.github.io/posts/3.longestsubstringwithoutrepeatingcharacters/</link>
        <pubDate>Thu, 30 Apr 2020 20:20:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Thu, 30 Apr 2020 20:20:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/3.longestsubstringwithoutrepeatingcharacters/</guid>
        <description>題目連結 難度: Medium 題目敘述 Given a string, find the length of the longest substring without repeating characters. Example 1: Input: &amp;quot;abcabcbb&amp;quot; Output: 3 Explanation: The answer is &amp;quot;abc&amp;quot;, with the length of 3. Example 2: Input: &amp;quot;bbbbb&amp;quot; Output: 1 Explanation: The answer is &amp;quot;b&amp;quot;, with the length of 1. Example 3: Input: &amp;quot;pwwkew&amp;quot; Output: 3 Explanation: The answer is &amp;quot;wke&amp;quot;, with the</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 136. Single Number</title>
        <link>https://stanley98745.github.io/posts/136.singlenumber/</link>
        <pubDate>Wed, 29 Apr 2020 20:20:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Wed, 29 Apr 2020 20:20:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/136.singlenumber/</guid>
        <description>題目連結 難度: Easy 題目敘述 Given a non-empty array of integers, every element appears twice except for one. Find that single one. Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? Example 1: Input: [2,2,1] Output: 1 Example 2: Input: [4,1,2,1,2] Output: 4 解答 1 2 3 4 class Solution: def singleNumber(self, nums: List[int])</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 22. Generate Parentheses</title>
        <link>https://stanley98745.github.io/posts/22.generateparentheses/</link>
        <pubDate>Tue, 28 Apr 2020 20:20:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Tue, 28 Apr 2020 20:20:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/22.generateparentheses/</guid>
        <description>題目連結 難度: medium 題目敘述 Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses. For example, given n = 3, a solution set is: [ &amp;quot;((()))&amp;quot;, &amp;quot;(()())&amp;quot;, &amp;quot;(())()&amp;quot;, &amp;quot;()(())&amp;quot;, &amp;quot;()()()&amp;quot; ] 解答 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 451. Sort Characters By Frequency</title>
        <link>https://stanley98745.github.io/posts/451.sortcharactersbyfrequency/</link>
        <pubDate>Fri, 24 Apr 2020 12:00:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Fri, 24 Apr 2020 12:00:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/451.sortcharactersbyfrequency/</guid>
        <description>題目敘述 題目連結 難度: Medium Given a string, sort it in decreasing order based on the frequency of characters. Example 1: Input: &amp;quot;tree&amp;quot; Output: &amp;quot;eert&amp;quot; Explanation: &#39;e&#39; appears twice while &#39;r&#39; and &#39;t&#39; both appear once. So &#39;e&#39; must appear before both &#39;r&#39; and &#39;t&#39;. Therefore &amp;quot;eetr&amp;quot; is also a valid answer. Example 2: Input: &amp;quot;cccaaa&amp;quot; Output: &amp;quot;cccaaa&amp;quot; Explanation: Both &#39;c&#39; and &#39;a&#39;</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 70. Climbing Stairs</title>
        <link>https://stanley98745.github.io/posts/70.climbingstairs/</link>
        <pubDate>Thu, 23 Apr 2020 18:38:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Thu, 23 Apr 2020 18:38:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/70.climbingstairs/</guid>
        <description>題目敘述 題目連結 難度: Easy You are climbing a stair case. It takes n steps to reach to the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Note: Given n will be a positive integer. Example 1: Input: 2 Output: 2 Explanation: There are two ways to climb to</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode - 20. Valid Parentheses</title>
        <link>https://stanley98745.github.io/posts/20.validparentheses/</link>
        <pubDate>Tue, 21 Apr 2020 20:20:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Tue, 21 Apr 2020 20:20:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/20.validparentheses/</guid>
        <description>題目連結 難度: Easy 題目敘述 Given a string containing just the characters &amp;lsquo;(&#39;, &amp;lsquo;)&#39;, &amp;lsquo;{&#39;, &amp;lsquo;}&#39;, &amp;lsquo;[&amp;rsquo; and &amp;lsquo;]&#39;, determine if the input string is valid. An input string is valid if: Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Note that an empty string is also considered valid. Example 1:</description>
        
        <dc:creator>Stanley</dc:creator>
        
        
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>leetcode</category>
            
          
        
      </item>
      
      <item>
        <title>Python skill -- split and re.split</title>
        <link>https://stanley98745.github.io/posts/split_and_re.split/</link>
        <pubDate>Mon, 20 Apr 2020 16:00:00 +0800</pubDate>
        <author>there801021@gmail.com (Stanley, JunFu Zhang)</author>
        <atom:modified>Mon, 20 Apr 2020 16:00:00 +0800</atom:modified>
        <guid>https://stanley98745.github.io/posts/split_and_re.split/</guid>
        <description>split() 用法介紹 str.split(sep=None, maxsplit=-1) 可以指定分隔符號 sep ，將字串進行分割。 maxsplit 用來指定分割的次數。所以總共會得到 maxsplit + 1 個字串。 sep: 不指定，會用空格來區分。 maxsplit: -1 表示不指定</description>
        
        <dc:creator>Stanley</dc:creator>
        <media:content url="https://stanley98745.github.io/images/feature3/code-file.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>string</category>
            
          
            
              <category>split</category>
            
          
            
              <category>RegExp</category>
            
          
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>python skill</category>
            
          
        
      </item>
      

    
  </channel>
</rss>