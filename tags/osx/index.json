[{"content":"前言 上一篇連結在此\n使用Hugo建立網站(MAC) (II)\n本文參考 在github部署hugo靜態網站\n註冊github 首先先到github 註冊帳號。\n你的username就是你未來的github.io前面的名稱。\n如果你的username叫做ccc，那你之後的網址就會叫做\n https://ccc.github.io\n 在github上建立兩個repositories 在github上建立兩個repositories，website-hugo 以及 username.github.io\nwebsite-hugo 這個repository隨便取就好，你要叫blog, new-site, sofarsogood 都可以。\n但是 username.github.io一定要跟自己的帳號一樣。\n像我是stanley98745，建立時就要打上stanley98745.github.io，因為我之前犯蠢，想說可以改別的名字。結果不行!\n 對了別忘記在名稱那邊要打上github.io。\n 建立public資料夾並連結到username.github.io 在blog資料夾底下，我們使用hugo指令來創建public的資料夾。\n(就是一開始hugo new site newsite，你的 newsite 資料夾底下)\n1  hugo   對沒錯，就只有 hugo\n 以下帳號的地方使用username來替代，記得修改成你的帳號哦！\n 1 2 3 4 5 6  cd public git init git remote add origin https://github.com/username/username.github.io.git git add . git commit -m \u0026#34;Initial commit\u0026#34; git push -u origin master   將blog資料夾連結到github上的website-hugo 基本上只有修改成website-hugo，其他都大同小異。\n1 2 3 4 5 6  cd public git init git remote add origin https://github.com/username/website-hugo.github.io.git git add . git commit -m \u0026#34;Initial commit\u0026#34; git push -u origin master    萬一在 git add . 出現warning，不要怕，別理他。\n 然後等待個幾分鐘，你的 https://username.github.io 就出現囉!\n更新網站 假設你有新的貼文想要上傳，那進到你的 newsite 資料夾底下，在終端機執行以下指令\n1 2 3 4 5  hugo cd public git add . git commit -m \u0026#34;NEW POST\u0026#34; git push origin master   那麼這樣就可以發表新的文章囉!\n使用Hugo建立網站(MAC)的系列文就到這邊啦!\nLinux的架站方式應該跟MAC差不多，所以未來吃飽沒事有機會再使用windows來試試看囉!\n","description":"Hugo建立網站教學","id":0,"section":"posts","tags":["hugo","osx","mac","github.io","website"],"title":"使用Hugo建立網站(MAC) (III)","uri":"https://stanley98745.github.io/posts/hugo_on_mac3/"},{"content":"前言 使用Hugo建立網站(MAC) (I)\n 本篇是介紹zzo這個主題\nzzo hugo theme\nzzo github\n zzo這個主題我其實蠻喜歡的，簡潔明瞭。不但可以放自己的部落格文章、簡報，此外還可以設置集散區域，來秀你的作品集與程式碼。不過我也還在摸索zzo這個主題，包含googleAnalytics，或是他的external libraries。\n那廢話不多說，我們馬上開始。\nConfig ：  注意這邊不是在 theme/zzo 資料夾裡面的 config 資料夾喔!\n 首先我們到config資料夾底下，可以看到 config/_default 資料夾底下有五個檔案，分別是：\n config.toml\nlanguages.toml\nmenus.en.toml\nmenus.ko.toml\nparams.toml\n config.toml 我們擷取部分可能會修改的程式碼\n1 2 3  baseURL = \u0026#34;http://example.org\u0026#34; title = \u0026#34;Hugo Zzo Theme\u0026#34; theme = \u0026#34;zzo\u0026#34;   baseURL：就是你的網址，比如說是https://XXXX.github.io\ntitle：似乎只是描述而已，真正的標籤頁title修改在 languages.toml 中\ntheme：基本上就是zzo\n1 2 3  defaultContentLanguage = \u0026#34;en\u0026#34; defaultContentLanguageInSubdir = true hasCJKLanguage = true   defaultContentLanguage：\n設定default的語言，我這邊是以en為主，不過好像可以改成zh\ndefaultContentLanguageInSubdir：\n讓你的網址後面可以是 網站/en\n像是https://XXXX.github.io/en 可以用來變換不同語言的設定。\nhasCJKLanguage:\nSet “true” for Chinese/Japanese/Korean languages.\n感覺是設定給中日韓語言架站的人使用的。不過我直接用en也可以打中文，所以不清楚差別到底在哪邊。\n1 2 3 4 5 6 7 8 9 10 11  summaryLength = 70 buildFuture = true copyright = \u0026#34;\u0026amp;copy;{year}, All Rights Reserved\u0026#34; timeout = 10000 enableEmoji = true paginate = 13 rssLimit = 100 enableGitInfo = false googleAnalytics = \u0026#34;\u0026#34;   summaryLength:\nThe length of a post description on a list page.\n但是我修改值之後卻發現沒什麼變化，可能還要再試試看。\nbuildFuture:\nif true, we can use future date for talks page\ntalks page是用來放links的列表頁面(video, ppt, \u0026hellip;)，蠻像庫存頁面的樣子。當把這個值改成 false，就可以變成像是先打好文章，然後時間到他就會顯示了。如果是 true，表示可以先看到“未來”的文章。假設你預定明天要發，日期改成明天，那你用localhost來看網站的時候，使用 false 是無法看到的哦。\ncopyright：\n也就是一般網頁最下方會出現的授權標語。\nenableEmoji：\n可以自由決定是否使用表情符號唷！\npaginate：\n決定首頁出現的文章數量。\ngoogleAnalytics:\n這部分還沒測試，但應該是將 UA-XXXX 貼上應該就可以了吧\u0026hellip;？\nlanguages.toml： 1 2 3 4 5 6 7 8 9  [en] title = \u0026#34;Hugo Zzo Theme\u0026#34; languageName = \u0026#34;English\u0026#34; weight = 1 [ko] title = \u0026#34;Hugo Zzo Theme\u0026#34; languageName = \u0026#34;한국어\u0026#34; weight = 2   title：出現在網頁標籤頁之後的標題，並不是在網頁內的標題哦！\n基本上我是將 [ko] 後面的都刪除了。\nmenus.en.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  [[main]] identifier = \u0026#34;about\u0026#34; name = \u0026#34;about\u0026#34; url = \u0026#34;about\u0026#34; weight = 1 [[main]] identifier = \u0026#34;archive\u0026#34; name = \u0026#34;archive\u0026#34; url = \u0026#34;archive\u0026#34; weight = 2 [[main]] identifier = \u0026#34;gallery\u0026#34; name = \u0026#34;gallery\u0026#34; url = \u0026#34;gallery\u0026#34; weight = 3 [[main]] parent = \u0026#34;gallery\u0026#34; name = \u0026#34;cartoon\u0026#34; url = \u0026#34;gallery/cartoon\u0026#34; [[main]] parent = \u0026#34;gallery\u0026#34; name = \u0026#34;photo\u0026#34; url = \u0026#34;gallery/photo\u0026#34; [[main]] identifier = \u0026#34;posts\u0026#34; name = \u0026#34;posts\u0026#34; url = \u0026#34;posts\u0026#34; weight = 4 [[main]] identifier = \u0026#34;notes\u0026#34; name = \u0026#34;notes\u0026#34; url = \u0026#34;notes\u0026#34; weight = 5   這個toml代表的是各個頁面的切換\n而目前我只留下 about, archive, posts 而已，並且我修改weight讓他們按照順序。(不過應該是沒有關係啦!)\nidentifier：\n不要修改，是辨識content資料夾底下的東西。\nname：\n可以修改，會顯示在頁面上，比如about可以修改成關於。\nurl：網址顯示的名稱。\nparams.tomllogoText = \u0026#34;Zzo\u0026#34; # Logo text that appears in the site navigation bar. logoType = \u0026#34;short\u0026#34; # long, short -\u0026gt; short: squre shape includes logo text, long: rectangle shape not includes logo text logo = true # Logo that appears in the site navigation bar. description = \u0026#34;The Zzo theme for Hugo example site.\u0026#34; # for SEO custom_css = [] # custom_css = [\u0026#34;scss/custom.scss\u0026#34;] and then make file at root/assets/scss/custom.scss custom_js = [] # custom_js = [\u0026#34;js/custom.js\u0026#34;] and then make file at root/assets/js/custom.js useFaviconGenerator = false # https://www.favicon-generator.org/ themeOptions = [\u0026#34;dark\u0026#34;, \u0026#34;light\u0026#34;, \u0026#34;hacker\u0026#34;, \u0026#34;solarized\u0026#34;, \u0026#34;kimbie\u0026#34;] # select options for site color theme notAllowedTypesInHome = [\u0026#34;contact\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;about\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in home page. type can be set in front matter or default to folder name. notAllowedTypesInHomeSidebar = [\u0026#34;about\u0026#34;, \u0026#34;archive\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in home page sidebar(recent post titles). notAllowedTypesInArchive = [\u0026#34;about\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in archive page # header homeHeaderType = \u0026#34;text\u0026#34; # text, img, slide # navbar enableThemeChange = true # site color theme # body enableBreadcrumb = true # breadcrumb for list, single page enableSearch = true # site search with Fuse enableSearchHighlight = true # when true, search keyword will be highlighted enableGoToTop = true # scroll to top enableWhoami = true # at the end of single page summaryShape = \u0026#34;classic\u0026#34; # card, classic, compact searchResultPosition = \u0026#34;main\u0026#34; # side, main archiveGroupByDate = \u0026#34;2006\u0026#34; # \u0026#34;2006-01\u0026#34;: group by month, \u0026#34;2006\u0026#34;: group by year archivePaginate = 13 # items per page paginateWindow = 1 # setting it to 1 gives 7 buttons, 2 gives 9, etc. If set 1: [1 ... 4 5 6 ... 356] [1 2 3 4 5 ... 356] etc talksPaginate = 8 # items per page talksGroupByDate = \u0026#34;2006\u0026#34; # \u0026#34;2006-01\u0026#34;: group by month, \u0026#34;2006\u0026#34;: group by year # whoami: usage - home page sidebar, single page bottom of post. all values can be empty myname = \u0026#34;zzossig\u0026#34; email = \u0026#34;zzossig@gmail.com\u0026#34; whoami = \u0026#34;Web Developer\u0026#34; bioImageUrl = \u0026#34;\u0026#34; # image url like http//... If not set, we find a avatar image in root/static/images/whoami/avatar.(png|jpg|svg) useGravatar = false # we use this option highest priority location = \u0026#34;Seoul, Korea\u0026#34; organization = \u0026#34;Hugo\u0026#34; link = \u0026#34;https://github.com/zzossig/hugo-theme-zzo\u0026#34; # sidebar enableBio = true # home page sidebar enableSidebar = true # Set to false to create the full width of the content. enableSidebarTags = true # if you want to use tags. enableSidebarSeries = true enableSidebarCategories = true enableHomeSidebarTitles = true enableListSidebarTitles = true enableToc = true # single page table of contents, you can replace this param to toc(toc = true) hideToc = false # Hide or Show toc tocPosition = \u0026#34;inner\u0026#34; # inner, outer enableTocSwitch = true # single page table of contents visibility switch itemsPerCategory = 5 # maximum number of posts shown in the sidebar. sidebarPosition = \u0026#34;right\u0026#34; # bio, profile component layout position # footer showPoweredBy = true # show footer text: Powered by Hugo and Zzo theme showFeedLinks = true # RSS Feed showSocialLinks = true # email, facebook, twitter ... enableLangChange = true # show button at bottom left of footer. # service baiduAnalytics = \u0026#34;\u0026#34; # alternative of google analytics enableBusuanzi = false # if set true, total page view, total unique visitors show up in the footer. busuanziSiteUV = true # unique visitors (total number of visitors) busuanziSitePV = true # site total page view count busuanziPagePV = true # post view count # rss updatePeriod = \u0026#34;\u0026#34; # Possible values: \u0026#39;hourly\u0026#39;, \u0026#39;daily\u0026#39;, \u0026#39;weekly\u0026#39;, \u0026#39;monthly\u0026#39;, or \u0026#39;yearly\u0026#39;. updateFrequency = \u0026#34;\u0026#34; fullContents = false # comment enableComment = true disqus_shortname = \u0026#34;\u0026#34; commento = false [gitment] # Gitment is a comment system based on GitHub issues. see https://github.com/imsun/gitment owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments clientId = \u0026#34;\u0026#34; # Your client ID clientSecret = \u0026#34;\u0026#34; # Your client secret [utterances] # https://utteranc.es/ owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments [gitalk] # Gitalk is a comment system based on GitHub issues. see https://github.com/gitalk/gitalk owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments clientId = \u0026#34;\u0026#34; # Your client ID clientSecret = \u0026#34;\u0026#34; # Your client secret # Valine. # You can get your appid and appkey from https://leancloud.cn # more info please open https://valine.js.org [valine] enable = false appId = \u0026#39;你的appId\u0026#39; appKey = \u0026#39;你的appKey\u0026#39; notify = false # mail notifier , https://github.com/xCss/Valine/wiki verify = false # Verification code avatar = \u0026#39;mm\u0026#39; placeholder = \u0026#39;说点什么吧...\u0026#39; visitor = false [changyan] changyanAppid = \u0026#34;\u0026#34; # Changyan app id # 畅言 changyanAppkey = \u0026#34;\u0026#34; # Changyan app key [livere] livereUID = \u0026#34;\u0026#34; # LiveRe UID # 来必力 # Isso: https://posativ.org/isso/ [isso] enable = false scriptSrc = \u0026#34;\u0026#34; # \u0026#34;https://isso.example.com/js/embed.min.js\u0026#34; dataAttrs = \u0026#34;\u0026#34; # \u0026#34;data-isso=\u0026#39;https://isso.example.com\u0026#39; data-isso-require-author=\u0026#39;true\u0026#39;\u0026#34; [socialOptions] # if set, social icons will show up. email = \u0026#34;mailto:your@email.com\u0026#34; phone = \u0026#34;\u0026#34; facebook = \u0026#34;http://example.org/\u0026#34; twitter = \u0026#34;http://example.org/\u0026#34; github = \u0026#34;https://github.com/zzossig/hugo-theme-zzo\u0026#34; stack-overflow = \u0026#34;\u0026#34; instagram = \u0026#34;\u0026#34; google-plus = \u0026#34;\u0026#34; youtube = \u0026#34;\u0026#34; medium = \u0026#34;\u0026#34; tumblr = \u0026#34;\u0026#34; linkedin = \u0026#34;\u0026#34; pinterest = \u0026#34;\u0026#34; stack-exchange = \u0026#34;\u0026#34; telegram = \u0026#34;\u0026#34; steam = \u0026#34;\u0026#34; weibo = \u0026#34;\u0026#34; douban = \u0026#34;\u0026#34; csdn = \u0026#34;\u0026#34; gitlab = \u0026#34;\u0026#34; mastodon = \u0026#34;\u0026#34; jianshu = \u0026#34;\u0026#34; zhihu = \u0026#34;\u0026#34; signal = \u0026#34;\u0026#34; whatsapp = \u0026#34;\u0026#34; [donationOptions] enable = false # if set, the donation button will show up on the single page. alipay = \u0026#34;\u0026#34; # Alipay QR Code image (example path: images/donation/alipay-qrcode.png) and put your file at root/static/images/donation/ wechat = \u0026#34;\u0026#34; # Wechat pay QR Code image (example path: same as above) paypal = \u0026#34;\u0026#34; # Paypal URL patreon = \u0026#34;\u0026#34; # Patreon URL bitcoin = \u0026#34;\u0026#34; # example path: images/donation/bitcoin-code-image.png [copyrightOptions] enableCopyrightLink = false # if set, you can add copyright link copyrightLink = \u0026#34;\u0026#34; copyrightLinkImage = \u0026#34;\u0026#34; copyrightLinkText = \u0026#34;\u0026#34; # possible share name: [\u0026#34;facebook\u0026#34;,\u0026#34;twitter\u0026#34;, \u0026#34;reddit\u0026#34;, \u0026#34;linkedin\u0026#34;, \u0026#34;tumblr\u0026#34;, \u0026#34;weibo\u0026#34;, \u0026#34;douban\u0026#34;, \u0026#34;line\u0026#34;] [[share]] name = \u0026#34;facebook\u0026#34; [[share]] name = \u0026#34;twitter\u0026#34; username = \u0026#34;\u0026#34;   有一點多，我只講述我修改的部分。\nlogoText：\n如圖，修改的是這個地方的標題。\ndescription：\nSEO的keyword\n接著是修改home page側邊欄的個人資料\n myname = \u0026ldquo;zzossig\u0026rdquo;\nemail = \u0026ldquo;zzossig@gmail.com\u0026rdquo;\nwhoami = \u0026ldquo;Web Developer\u0026rdquo;\nbioImageUrl = \u0026quot;\u0026rdquo;\nuseGravatar = false # we use this option highest priority\nlocation = \u0026ldquo;Seoul, Korea\u0026rdquo;\norganization = \u0026ldquo;Hugo\u0026rdquo;\nlink = \u0026ldquo;https://github.com/zzossig/hugo-theme-zzo\u0026quot;\n 其中要比較注意的是 bioImageUrl ，會讀取 static/images/whoami/avatar.jpg ，要不就是貼圖片網址，要不就是將 avatar.jpg 改成你要的圖片。\nenableLangChange：\n因為我只用一種語言，所以我把這個取消。假設你有韓文跟英文的網頁，就可以用這個來替換，會出現一個按鈕在最下方的左邊。\nenableBusuanzi：\ntotal views與total vistors，會在page最下方顯示。\n[socialOptions]\n總之就是修改你的個人資料，會在側邊欄以及最下方顯示出來，可以放Facebook, Linkedin, Youtube, \u0026hellip;。\nContent 在 content 資料夾底下預設會有 en 以及 ko 兩個資料夾，我自己是把 ko 資料夾刪除了，而 en 資料夾底下只留了 about, archive, posts ，可以根據你自己的需求，來做選擇。不過要提醒，可能要先理解 markdown 的語法，再來進行修改哦。\n除此之外，還有一個檔案叫做 _index.md，主要在修改網頁的主標題、副標題與背景顏色和大小，而我只修改 title 跟 subtitle ，可以看下面的圖來理解。\n基本上大致會修改的地方就是這兩個資料夾了。下一篇我們將介紹如何把網站丟到github上並且發布。\n下一篇連結在此\n使用Hugo建立網站(MAC) (III)\n","description":"Hugo建立網站教學","id":1,"section":"posts","tags":["hugo","osx","mac","github.io","website"],"title":"使用Hugo建立網站(MAC) (II)","uri":"https://stanley98745.github.io/posts/hugo_on_mac2/"},{"content":"OS: Mac OSX\n嘗試使用window10，但不知道為什麼localhost:1313就是不給看。\n一氣之下拿起我的陳年Mac來架站。\nHomebrew \u0026amp; Hugo安裝 ： 若沒有安裝homebrew, 請先安裝homebrew\n升級homebrew，以及安裝git (optional)與hugo\n1 2 3  $ brew update \u0026amp; upgrade $ brew install git $ brew install hugo   建立網站： 首先開啟終端機，並移動到目標路徑，然後利用hugo指令建立出一個叫 blog 的資料夾，你也可以替換你自己想要的名稱。再來部落格主題，我這邊採用zzo的主題。如果你想要別的主題，可以到 hugo themes 搜尋你想要的主題，但由於每個作者習慣不同，所以在後面設定config.toml時會有點不同。\n1 2 3 4 5 6  $ hugo new site blog $ cd blog/themes $ git clone themes website $ git clone https://github.com/zzossig/hugo-theme-zzo.git $ cp -r zzo/exampleSite/** ../ $ cd ..    以上如果你採用的是其他主題，那在 cp 那行，zzo就應該改成你主題的名字。\n 如果你是想要替換主題，就將 git clone 那行改成以下形式。\n1  git submodule add https://github.com/zzossig/hugo-theme-zzo.git   通常在發布網站之前，我們會使用localhost:1313來看自己做的網站有沒有問題。\n1  hugo serve   然後在網頁上面打上 localhost:1313 ，就可以看到你的成品了。\n修改樣板： 一般來說複製 exampleSite 資料夾中的所有檔案到blog資料夾底下就ok了。同時 config.toml 就是我們要修改的對象。但是zzo的主題，config.toml 是放在 config 資料夾底下，所以我們要進去 config/_default 資料夾底下修改 config.toml\n因此我把 zzo theme 的 config.toml 修改放在下一篇，這樣文章內容會比較一致。\n其他主題則需要看一下作者github的 README ，千萬要多小心哦。\n發表文章 在 blog/content 資料夾底下應該可以找到post資料夾，有的還會放在更深的一層，像是zzo的主題就放在 content/en 資料夾底下。如果想要發表文章，只需要\n1  hugo new posts/your-post.md   大致上就是這樣子囉！\n下一篇連結在此\n使用Hugo建立網站(MAC) (II)\n","description":"Hugo建立網站教學","id":2,"section":"posts","tags":["hugo","osx","mac","github.io","website"],"title":"使用Hugo建立網站(MAC) (I)","uri":"https://stanley98745.github.io/posts/hugo_on_mac1/"},{"content":"Stanley, 對科學理論與程式技術有著高度熱忱，喜歡東摸摸西摸摸，人稱雜學大師。目前為接案工作者，使用 python 來撰寫科學計算與相關應用軟體。量子力學、分子動力學、第一原理計算、光學模擬都略懂略懂。目前對於人工智慧相當有興趣，努力自學中，也正準備嘗試某些領域的應用，但會不會變成是自high的情況呢？ 讓我們拭目以待。\n目前想做的事情：  Deep Learning 理論學習與實際應用實作 python 技術整理 學會打網球  服務過的專案有：   科學計算\n\u0026ndash; 分子動力學研究 HfO2 再結晶化條件 (TSMC)\n\u0026ndash; 多尺度模擬開發新型含磷硬化劑 (NAN YA PLASTICS)\n\u0026ndash; 分子動力學研究PVDF參雜石墨烯之相轉變情形 (NTUST)\n\u0026ndash; 矽酸鈉水溶液參雜石墨烯之難溶行為研究 (NTUST)\n  利用python模組開發\n\u0026ndash; 客製化分子模擬模組以研究類鑽石材料之探針摩擦行為 (CCU)\n\u0026ndash; 液晶材料之熱膨脹行為之模擬模組開發案 (NTUT)\n\u0026ndash; 車輛影像測定實際車速之模組開發 (III)\n  其他\n\u0026ndash; NVIDIA DeepStream 以及Jetson Xavier開發之研究 (III)\n  若你有任何問題，請 mail我\n","description":"Stanley introduces himself","id":3,"section":"","tags":null,"title":"About","uri":"https://stanley98745.github.io/about/"}]